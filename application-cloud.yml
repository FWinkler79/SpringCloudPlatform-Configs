
# Eureka Configurations:
# These should be done in the Eureka Server / Client instances directly.
# The config-server is looked up through the Eureka service registry. Hence this configuration
# will only be available AFTER Eureka is up and running and clients have connected and looked
# up config-server.
# 
# eureka:
#   instance:
#     leaseRenewalIntervalInSeconds: 30 # make sure in the cloud we use proper default values.
#     ## This information will be part of the InstanceInfo returned by DiscoveryClient / EurekaClient.
#     ## Unfortunately, these have to be specified explicitly, since Eureka creates these URLs wrongly
#     ## when running on CF. 
#     ## See: https://cloud.spring.io/spring-cloud-netflix/multi/multi__service_discovery_eureka_clients.html
#     homePageUrl:          https://${vcap.application.uris[0]:localhost}/   
#     statusPageUrl:        https://${vcap.application.uris[0]:localhost}/actuator/info 
#     healthCheckUrl:       https://${vcap.application.uris[0]:localhost}/actuator/health
#     secureHealthCheckUrl: https://${vcap.application.uris[0]:localhost}/actuator/health
#     ## set the host name explicitly when in Cloud Foundry.
#     hostname:             ${vcap.application.uris[0]:localhost}
#     nonSecurePortEnabled: false
#     securePortEnabled:    true
#     securePort:           443
#     metadata-map:  
#       # Adding information about the application GUID and app instance index to 
#       # each instance metadata. This could be used for setting the X-CF-APP-INSTANCE header
#       # to instruct Go-Router where to route.
#       cfAppGuid:       ${vcap.application.application_id}
#       cfInstanceIndex: ${INSTANCE_INDEX}
#   client:
#     registryFetchIntervalSeconds: 15 # fetch Eureka registration information every 15 seconds.
#     region: default
#     serviceUrl.defaultZone: ${eureka-server-url}/eureka  # "eureka-server-URL" should come from the environment.

some.cloud.only.config: true

#spring.zipkin.base-url=${vcap.services.zipkin-service.credentials.uri}
#spring.rabbitmq.addresses=${vcap.services.reservations-rabbitmq.credentials.uri}
#spring.rabbitmq.addresses = ${vcap.services.reservations-rabbitmq.credentials.uri}
#spring.rabbitmq.host=${vcap.services.reservations-rabbitmq.credentials.uri}